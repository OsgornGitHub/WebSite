
Проект – это смесь last.fm и music.yandex.ru: за основу мы будем брать функционал yandex и использовать last.fm API для получения данных. Для работы с last.fm рекомендую использовать готовую SDK, а не изобретать свою.

1.	Установить VS2017, MSSQL, Git клиент.
2.	Создать GitHub аккаунт и дать мне ссылку (при работе над задачами использовать git-flow и не забывать коммитаться почаще).
!!! (Где разные уровни?)  3.	Спроектировать архитектуру приложения, которое будет состоять из API + FrontEnd, уровень бизнес логики, уровень работы с базой данных (слоев не обязательно 3, может быть больше). При разработке архитектуры учесть, что потом надо будет создать Windows-приложение, которое будет делать то же самое, что и веб апп.
!!! (Где material design?) 4.	Создать новый проект (.Net Core + MVC или .NET Core + Angular5/React (это более крутой и сложный вариант). Подключать Bootstrap + Material Design или Angular Material.
5.	Реализовать главную страницу, куда плитками будет выводится ТОП артистов с last.fm. Плитка = кликабельная карточка с фото и именем исполнителя.
!!! (Нету селектора нужной страницы) 6.	Реализовать пагинацию на главной странице с селектором количества записей на странице (10, 25, 50).
7.	Если проект на MVC: реализовать пагинацию на AJAX со сменой URL в адресной строке.
8.	Если проект на Angular/React – менять URL при смене страниц, чтобы был возможен доступ по прямой ссылке.
9.	Реализовать страницу артиста: фото, имя, биография + три таба (топ песен, топ альбомов, похожие исполнители). Референс – яндекс музыка https://music.yandex.ru/artist/792433/tracks 
10.	 Инфа в табы должна подгружаться отдельными запросами.
11.	Доработать вкладку «Похожие», чтобы артисты в ней открывались в твоем приложении в новой вкладке.
!!! (Нету ссылки на страницу исполнителя) 12.	Реализовать страницу «Альбом», где будет: Обложка, название, имя исполнителя и ссылка на него + список треков из этого альбома.
13.	Добавить ссылки на страницу Альбом в таб из пункта 9.
!!! (Ты подключил в веб проект, а в задании было "не в веб")14.	Подключить Entity Framework в проект (не в веб).
15.	Сгенерировать базу данных из моделей, созданных ранее.
!!! (Не вижу реализацию шаблона) 16.	Реализовать шаблон Репозиторий для работы с базой данных.
17.	Для каждого обращения к last.fm добавить сохранение результатов в базу.
!!! (Нет вычитки результатов из базы) 18.	Обновить сервисные методы так, чтобы они сперва искали необходимые данные в базе, и только если их нету – обращались к last.fm
!!! (Нет юнит-тестов) 19.	Реализовать Юнит-тесты для уровня бизнес-логики, используя XUnit.
!!! (Консольное приложение использует копипасту кода, а не уровень бизнес-логики) 20.	В этом же солюшене создать консольное приложение, которое будет использовать тот же уровень бизнес-логики.
!!! (Пока нету реализации сканирования папки) 21.	Консольное приложение должно уметь искать в заданной папке (через конфиг) mp3 файлы и по названию трека и исполнителю находить данные в last.fm. После чего результат и путь к файлу должен сохраняться в базу.
!!! (Пока нету реализации) 22.	По данным из пункта 21 выводить иконку для скачивания или воспроизведения трека (при его наличии) в твоем приложении.
23.	Сделать проект респонсив.