// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebSite.Models;

namespace WebSite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebSite.Models.Album", b =>
                {
                    b.Property<Guid>("AlbumId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ArtistId");

                    b.Property<string>("Cover");

                    b.Property<string>("NameAlbum");

                    b.Property<string>("NameArtist");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("WebSite.Models.Artist", b =>
                {
                    b.Property<Guid>("ArtistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Biography");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("WebSite.Models.Similar", b =>
                {
                    b.Property<Guid>("SimilarId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ArtistId");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.HasKey("SimilarId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Similars");
                });

            modelBuilder.Entity("WebSite.Models.Track", b =>
                {
                    b.Property<Guid>("TrackId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AlbumId");

                    b.Property<string>("Cover");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.HasKey("TrackId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("WebSite.Models.Album", b =>
                {
                    b.HasOne("WebSite.Models.Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("WebSite.Models.Similar", b =>
                {
                    b.HasOne("WebSite.Models.Artist")
                        .WithMany("Similars")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("WebSite.Models.Track", b =>
                {
                    b.HasOne("WebSite.Models.Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId");
                });
#pragma warning restore 612, 618
        }
    }
}
